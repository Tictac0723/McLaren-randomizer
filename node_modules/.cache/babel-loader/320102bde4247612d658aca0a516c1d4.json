{"ast":null,"code":"var _jsxFileName = \"/Users/e140473/Documents/codebase/randomizer/src/Randomizer.js\",\n    _s = $RefreshSig$();\n\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport SyncIcon from '@material-ui/icons/Sync';\nimport Fab from '@material-ui/core/Fab';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst teamMembers = [{\n  name: 'Taylor Clark',\n  img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale'\n}, {\n  name: 'Delvin Hall',\n  img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale'\n}, {\n  name: 'Nishant Seth',\n  img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale'\n}, {\n  name: 'Chad Gabrysch',\n  img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale'\n}, {\n  name: 'Chris Soloman',\n  img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale'\n}, {\n  name: 'Linda Stewart',\n  img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale'\n}, {\n  name: 'Cris Sakae',\n  img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale'\n}, {\n  name: 'Kristin Erikson',\n  img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale'\n}, {\n  name: 'Brian Denholm',\n  img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale'\n}, {\n  name: 'Jourdan McClish',\n  img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale'\n}];\nconst [selectedTeamMember, setSelectedTeamMember] = useState({\n  name: '',\n  img: ''\n});\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3)\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  },\n  outerSpan: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500,\n    textAlign: 'center'\n  }\n}));\n\nconst Randomizer = () => {\n  _s();\n\n  const classes = useStyles();\n  const listMembers = teamMembers.map(member => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      style: {\n        margin: 'auto',\n        width: \"25%\",\n        height: \"25%\"\n      },\n      alt: member.name,\n      src: member.img,\n      className: classes.large\n    }, member.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: member.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this));\n\n  const randomize = () => {\n    var random = teamMembers[Math.floor(Math.random() * teamMembers.length)];\n    setSelectedTeamMember(random);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"McLaren Randomizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: 'center',\n        justify: 'center',\n        style: {\n          width: \"100%\"\n        },\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Fab, {\n          variant: \"extended\",\n          onClick: () => randomize(),\n          children: [/*#__PURE__*/_jsxDEV(SyncIcon, {\n            className: classes.extendedIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), \"  Randomize\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        className: classes.outerSpan,\n        children: listMembers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            margin: 'auto',\n            width: \"25%\",\n            height: \"25%\"\n          },\n          alt: selectedTeamMember === null ? '?' : selectedTeamMember.name,\n          src: selectedTeamMember === null ? /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 177\n          }, this) : setSelectedTeamMember.img,\n          className: classes.large\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: selectedTeamMember === null ? 'Who will it be?' : setSelectedTeamMember.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Randomizer, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Randomizer;\nexport default Randomizer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Randomizer\");","map":{"version":3,"sources":["/Users/e140473/Documents/codebase/randomizer/src/Randomizer.js"],"names":["Grid","Avatar","SyncIcon","Fab","PersonIcon","makeStyles","React","useState","teamMembers","name","img","selectedTeamMember","setSelectedTeamMember","useStyles","theme","root","display","margin","spacing","small","width","height","large","outerSpan","padding","maxWidth","textAlign","Randomizer","classes","listMembers","map","member","randomize","random","Math","floor","length","extendedIcon"],"mappings":"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","sourcesContent":["import Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport SyncIcon from '@material-ui/icons/Sync';\nimport Fab from '@material-ui/core/Fab';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useState } from 'react';\n\nconst teamMembers = [\n  { name: 'Taylor Clark', img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale' },\n  { name: 'Delvin Hall', img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale' },\n  { name: 'Nishant Seth', img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale' },\n  { name: 'Chad Gabrysch', img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale' },\n  { name: 'Chris Soloman', img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale' },\n  { name: 'Linda Stewart', img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale' },\n  { name: 'Cris Sakae', img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale' },\n  { name: 'Kristin Erikson', img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale' },\n  { name: 'Brian Denholm', img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale' },\n  { name: 'Jourdan McClish', img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale' },\n]\nconst [selectedTeamMember, setSelectedTeamMember] = useState({name: '', img: ''});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  outerSpan: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500,\n    textAlign: 'center'\n  }\n}));\n\nconst Randomizer = () => {\n  const classes = useStyles();\n  const listMembers = teamMembers.map((member) =>\n    <span>\n      <Avatar style={{ margin: 'auto', width: \"25%\", height: \"25%\", }} key={member.name} alt={member.name} src={member.img} className={classes.large} />\n      <span>{member.name}</span>\n    </span>\n  );\n  const randomize = () => {\n    var random = teamMembers[Math.floor(Math.random() * teamMembers.length)];\n    setSelectedTeamMember(random);\n  }\n  return (\n    <div className=\"App\">\n      <h1>\n        McLaren Randomizer\n      </h1>\n      <Grid container spacing={3}>\n        <Grid container alignItems={'center'} justify={'center'} style={{ width: \"100%\" }} item xs={12}>\n          <Fab variant=\"extended\" onClick={() => randomize()}>\n            <SyncIcon className={classes.extendedIcon} />  Randomize\n          </Fab>\n        </Grid>\n        <Grid item xs={6} className={classes.outerSpan}>\n          {listMembers}\n        </Grid>\n        <Grid item xs={6}>\n          <Avatar style={{ margin: 'auto', width: \"25%\", height: \"25%\", }} alt={selectedTeamMember === null ? '?' : selectedTeamMember.name} src={selectedTeamMember === null ? <PersonIcon /> : setSelectedTeamMember.img} className={classes.large} />\n          <span>{selectedTeamMember === null ? 'Who will it be?' : setSelectedTeamMember.name}</span>\n        </Grid>\n      </Grid>\n    </div >\n  );\n}\n\nexport default Randomizer;\n"]},"metadata":{},"sourceType":"module"}