{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["teamMembers","name","img","useStyles","makeStyles","theme","root","display","margin","spacing","small","width","height","large","outerSpan","padding","maxWidth","textAlign","App","backgroundColor","minHeight","flexDirection","alignItems","justifyContent","color","classes","useState","selectedTeamMember","setSelectedTeamMember","className","Grid","container","justify","style","item","xs","Fab","variant","onClick","random","Math","floor","length","console","log","randomize","extendedIcon","Avatar","alt","src","fontSize","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAQMA,EAAc,CAClB,CAAEC,KAAM,eAAgBC,IAAK,oPAC7B,CAAED,KAAM,cAAeC,IAAI,gNAC3B,CAAED,KAAM,eAAgBC,IAAK,yRAC7B,CAAED,KAAM,uDAAwDC,IAAK,4RACrE,CAAED,KAAM,gBAAiBC,IAAK,mQAC9B,CAAED,KAAM,gBAAiBC,IAAK,mPAC9B,CAAED,KAAM,aAAcC,IAAK,kOAC3B,CAAED,KAAM,kBAAmBC,IAAK,gQAChC,CAAED,KAAM,gBAAiBC,IAAK,oQAC9B,CAAED,KAAM,kBAAmBC,IAAK,yPAG5BC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACT,QAAS,CACPC,OAAQH,EAAMI,QAAQ,KAG1BC,MAAO,CACLC,MAAON,EAAMI,QAAQ,GACrBG,OAAQP,EAAMI,QAAQ,IAExBI,MAAO,CACLF,MAAON,EAAMI,QAAQ,GACrBG,OAAQP,EAAMI,QAAQ,IAExBK,UAAW,CACTC,QAASV,EAAMI,QAAQ,GACvBD,OAAQ,OACRQ,SAAU,IACVC,UAAW,UAEbC,IAAK,CACHC,gBAAiB,UACjBC,UAAW,QACXb,QAAS,OACTc,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,MAAO,aAgCIN,EA5BH,WACV,IAAMO,EAAUtB,IADA,EAEoCuB,mBAAS,MAF7C,mBAETC,EAFS,KAEWC,EAFX,KAQhB,OACE,sBAAKC,UAAWJ,EAAQP,IAAxB,UACE,oDAGA,eAACY,EAAA,EAAD,CAAMC,WAAS,EAACtB,QAAS,EAAzB,UACE,cAACqB,EAAA,EAAD,CAAMC,WAAS,EAACT,WAAY,SAAUU,QAAS,SAAUC,MAAO,CAAEtB,MAAO,QAAUuB,MAAI,EAACC,GAAI,GAA5F,SACE,eAACC,EAAA,EAAD,CAAKC,QAAQ,WAAWC,QAAS,kBAZvB,WAChB,IAAIC,EAASvC,EAAYwC,KAAKC,MAAMD,KAAKD,SAAWvC,EAAY0C,SAChEC,QAAQC,IAAIL,GACZX,EAAsBW,GASuBM,IAAvC,UACE,cAAC,IAAD,CAAUhB,UAAWJ,EAAQqB,eAD/B,mBAIF,eAAChB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,UACE,cAACY,EAAA,EAAD,CAAQd,MAAO,CAAEzB,OAAQ,OAAQG,MAAO,QAASC,OAAQ,SAAYoC,IAA4B,OAAvBrB,EAA8B,IAAMA,EAAmB1B,KAAMgD,IAA4B,OAAvBtB,EAA8B,cAAC,IAAD,IAAiBA,EAAmBzB,IAAK2B,UAAWJ,EAAQZ,QACtO,qBAAKoB,MAAO,CAAChB,UAAW,SAAUiC,SAAU,SAAUC,UAAW,QAAjE,SAAkG,OAAvBxB,EAA8B,sBAAwBA,EAAmB1B,iBC9D/ImD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eafed169.chunk.js","sourcesContent":["import Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport SyncIcon from '@material-ui/icons/Sync';\nimport Fab from '@material-ui/core/Fab';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useState } from 'react';\n\nconst teamMembers = [\n  { name: 'Taylor Clark', img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairNotTooLong&accessoriesType=Prescription02&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Squint&eyebrowType=Default&mouthType=Smile&skinColor=Pale' },\n  { name: 'Delvin Hall', img:'https://avataaars.io/?avatarStyle=Circle&topType=NoHair&accessoriesType=Blank&facialHairType=Blank&clotheType=Hoodie&clotheColor=Black&eyeType=Side&eyebrowType=UpDown&mouthType=Serious&skinColor=DarkBrown' },\n  { name: 'Nishant Seth', img: 'https://avataaars.io/?avatarStyle=Circle&topType=ShortHairShortWaved&accessoriesType=Wayfarers&hairColor=BrownDark&facialHairType=BeardLight&facialHairColor=BrownDark&clotheType=Hoodie&clotheColor=Black&eyeType=Happy&eyebrowType=UnibrowNatural&mouthType=Twinkle&skinColor=Light' },\n  { name: 'Chad Gabrysch would like to pass it to Brian Denholm', img: 'https://avataaars.io/?avatarStyle=Transparent&topType=ShortHairShaggyMullet&accessoriesType=Prescription02&hairColor=BrownDark&facialHairType=Blank&clotheType=ShirtCrewNeck&clotheColor=PastelBlue&eyeType=Default&eyebrowType=RaisedExcitedNatural&mouthType=Concerned&skinColor=Light' },\n  { name: 'Chris Soloman', img: 'https://avataaars.io/?avatarStyle=Transparent&topType=ShortHairShortFlat&accessoriesType=Blank&hairColor=Brown&facialHairType=Blank&clotheType=ShirtCrewNeck&clotheColor=Blue03&eyeType=Squint&eyebrowType=RaisedExcitedNatural&mouthType=Smile&skinColor=Light' },\n  { name: 'Linda Stewart', img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairBun&accessoriesType=Prescription02&hairColor=Black&facialHairType=Blank&clotheType=CollarSweater&clotheColor=Blue02&eyeType=Side&eyebrowType=Default&mouthType=Default&skinColor=Black' },\n  { name: 'Cris Sakae', img: 'https://avataaars.io/?avatarStyle=Transparent&topType=LongHairNotTooLong&accessoriesType=Round&hairColor=Black&facialHairType=Blank&clotheType=BlazerSweater&eyeType=Happy&eyebrowType=Default&mouthType=Smile&skinColor=Light' },\n  { name: 'Kristin Erikson', img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairMiaWallace&accessoriesType=Kurt&hairColor=Brown&facialHairType=Blank&clotheType=GraphicShirt&clotheColor=Black&graphicType=Skull&eyeType=Happy&eyebrowType=Default&mouthType=Serious&skinColor=Pale' },\n  { name: 'Brian Denholm', img: 'https://avataaars.io/?avatarStyle=Circle&topType=ShortHairShortFlat&accessoriesType=Wayfarers&hairColor=Auburn&facialHairType=Blank&clotheType=Hoodie&clotheColor=PastelBlue&eyeType=Surprised&eyebrowType=RaisedExcitedNatural&mouthType=Tongue&skinColor=Light' },\n  { name: 'Jourdan McClish', img: 'https://avataaars.io/?avatarStyle=Circle&topType=LongHairStraight&accessoriesType=Blank&hairColor=BlondeGolden&facialHairType=Blank&clotheType=CollarSweater&clotheColor=Blue02&eyeType=Default&eyebrowType=Default&mouthType=Default&skinColor=Pale' },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  outerSpan: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500,\n    textAlign: 'center'\n  },\n  App: {\n    backgroundColor: '#282c34',\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'white'\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [selectedTeamMember, setSelectedTeamMember] = useState(null);\n  const randomize = () => {\n    var random = teamMembers[Math.floor(Math.random() * teamMembers.length)];\n    console.log(random)\n    setSelectedTeamMember(random);\n  }\n  return (\n    <div className={classes.App}>\n      <h1>\n        McLaren Randomizer\n      </h1>\n      <Grid container spacing={3}>\n        <Grid container alignItems={'center'} justify={'center'} style={{ width: \"100%\" }} item xs={12}>\n          <Fab variant=\"extended\" onClick={() => randomize()}>\n            <SyncIcon className={classes.extendedIcon} />  Randomize\n          </Fab>\n        </Grid>\n        <Grid item xs={12}>\n          <Avatar style={{ margin: 'auto', width: \"250px\", height: \"250px\", }} alt={selectedTeamMember === null ? '?' : selectedTeamMember.name} src={selectedTeamMember === null ? <PersonIcon /> : selectedTeamMember.img} className={classes.large} />\n          <div style={{textAlign: 'center', fontSize: '1.5rem', marginTop: '20px'}}>{selectedTeamMember === null ? 'Who will we choose?' : selectedTeamMember.name}</div>\n        </Grid>\n      </Grid>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}